;not bothering implementing a prng

.def temp 8 ;used to swap elements
.def i = 9
.def one 10
.def stop = 11 ;stores the number of loops
wrt i 0
wrt one 1
wrt stop 9 ;number of loops + 1

sdb 127
dbf 0
sdb 63
dbf 1
sdb 31
dbf 2
wrt 3 3
sdb 255
dbf 4
wrt 5 15
wrt 6 1
wrt 7 7
pus
jmp display
nop

start:
  ;cpy is immediate, so there's no pointers and in this case it's ugly
  les 0 1
  jpi skip0
  cpy 0 temp
  cpy 1 0
  cpy temp 1
  skip0:
  les 1 2
  jpi skip1
  cpy 1 temp
  cpy 2 1
  cpy temp 2
  skip1:
  les 2 3
  jpi skip2
  cpy 2 temp
  cpy 3 2
  cpy temp 3
  skip2:
  les 3 4
  jpi skip3
  cpy 3 temp
  cpy 4 3
  cpy temp 4
  skip3:
  les 4 5
  jpi skip4
  cpy 4 temp
  cpy 5 4
  cpy temp 5
  skip4:
  les 5 6
  jpi skip5
  cpy 5 temp
  cpy 6 5
  cpy temp 6
  skip5:
  les 6 7
  jpi skip6
  cpy 6 temp
  cpy 7 6
  cpy temp 7
  skip6:
  
  pus
  jmp display
  nop

  ;loop back
  add i one
  abf i
  les i stop
  jpi start
  nop

hlt

display: ;then callback
  out 0 0
  out 1 1
  out 2 2
  out 3 3
  out 4 4
  out 5 5
  out 6 6
  out 7 7
  pop
  nop

; wrong jump back?
